version: '3.8'

services:
  db:
    image: postgres:17-alpine
    container_name: pg-database
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-ammar}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-ammar}
      - POSTGRES_DB=${POSTGRES_DB:-mydatabase-pgresql}
    ports:
      - "5434:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ammar} -d ${POSTGRES_DB:-mydatabase-pgresql}"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ..
      dockerfile: project-pgresql/Dockerfile
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER:-ammar}:${POSTGRES_PASSWORD:-ammar}@db:5434/${POSTGRES_DB:-mydatabase-pgresql}
      - SECRET_KEY=your-super-secret-key-here
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    volumes:
      - ../orm-dbmigration:/code
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata:
